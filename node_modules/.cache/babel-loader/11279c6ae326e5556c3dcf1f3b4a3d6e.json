{"ast":null,"code":"var _jsxFileName = \"/Users/willianzdietz/Downloads/finished-project-flashedCards/src/Deck/DeckDelete.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { deleteDeck } from \"../utils/api/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DeckDelete(_ref) {\n  _s();\n\n  let {\n    deckId\n  } = _ref;\n  const history = useHistory();\n\n  function handleDeckDelete() {\n    const deleteDeckPromt = window.confirm(\"Delete this Deck? You will not be able to recover it.\");\n\n    if (deleteDeckPromt) {\n      deleteDeck(deckId).then(history.push(`/`)).then(window.location.reload()); //this reloads the page to show that the deck has been deleted.\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"btn btn-danger float-right\",\n    onClick: handleDeckDelete,\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"oi oi-trash\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DeckDelete, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = DeckDelete;\nexport default DeckDelete;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckDelete\");","map":{"version":3,"names":["React","useHistory","deleteDeck","DeckDelete","deckId","history","handleDeckDelete","deleteDeckPromt","window","confirm","then","push","location","reload"],"sources":["/Users/willianzdietz/Downloads/finished-project-flashedCards/src/Deck/DeckDelete.js"],"sourcesContent":["import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { deleteDeck } from \"../utils/api/index\";\n\nfunction DeckDelete({deckId}) {\n    const history = useHistory();\n\n    function handleDeckDelete() {\n    const deleteDeckPromt = window.confirm(\"Delete this Deck? You will not be able to recover it.\")\n\n    if(deleteDeckPromt) {\n        deleteDeck(deckId)\n        .then((history.push(`/`)))\n        .then(window.location.reload()) //this reloads the page to show that the deck has been deleted.\n\n    }\n}\n\n    return (\n        <button className=\"btn btn-danger float-right\" onClick={handleDeckDelete}>\n            <span className=\"oi oi-trash\"></span>\n        </button>\n    )\n}\n\nexport default DeckDelete;"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,UAAT,QAA2B,oBAA3B;;;AAEA,SAASC,UAAT,OAA8B;EAAA;;EAAA,IAAV;IAACC;EAAD,CAAU;EAC1B,MAAMC,OAAO,GAAGJ,UAAU,EAA1B;;EAEA,SAASK,gBAAT,GAA4B;IAC5B,MAAMC,eAAe,GAAGC,MAAM,CAACC,OAAP,CAAe,uDAAf,CAAxB;;IAEA,IAAGF,eAAH,EAAoB;MAChBL,UAAU,CAACE,MAAD,CAAV,CACCM,IADD,CACOL,OAAO,CAACM,IAAR,CAAc,GAAd,CADP,EAECD,IAFD,CAEMF,MAAM,CAACI,QAAP,CAAgBC,MAAhB,EAFN,EADgB,CAGgB;IAEnC;EACJ;;EAEG,oBACI;IAAQ,SAAS,EAAC,4BAAlB;IAA+C,OAAO,EAAEP,gBAAxD;IAAA,uBACI;MAAM,SAAS,EAAC;IAAhB;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH;;GAnBQH,U;UACWF,U;;;KADXE,U;AAqBT,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}
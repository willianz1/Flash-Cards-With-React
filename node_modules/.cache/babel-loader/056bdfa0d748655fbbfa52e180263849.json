{"ast":null,"code":"var _jsxFileName = \"/Users/willianzdietz/Downloads/finished-project-flashedCards/src/Cards/CardList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CardList(_ref) {\n  _s();\n\n  var _cards$index, _cards$index2;\n\n  let {\n    deck,\n    cardCount,\n    cards\n  } = _ref;\n  const [index, setIndex] = useState(0);\n  const [flipSide, setFlipSide] = useState(true);\n  const history = useHistory();\n\n  if (cardCount < 3) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \" Not Enough Cards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" You need at least 3 cards to study. There are \", cardCount, \" cards in this deck\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: () => history.push(`/decks/${deck.id}/cards/new`),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"oi oi-plus mr-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this), \"Add Cards\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this);\n  } //flips the cards between the front and back using a boolean\n\n\n  function flipClick() {\n    setFlipSide(!flipSide);\n  } //cycles through the deck. once the deck is complete, the user is prompted to either restart or return home \n\n\n  function nextClick() {\n    if (index < cardCount - 1) {\n      setIndex(index + 1);\n      setFlipSide(true);\n    } else {\n      const restartPrompt = window.confirm(\"Restart? Click 'Cancel' to return to the home page.\"); //if restart prompt returns true, reset the deck to the initial conditions\n\n      if (restartPrompt) {\n        setIndex(0);\n        setFlipSide(true);\n      } //if restart prompt is false, go home\n      else history.push(\"/\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-body border rounded p-2 my-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-title\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Card \", index + 1, \" of \", cardCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: flipSide ? (_cards$index = cards[index]) === null || _cards$index === void 0 ? void 0 : _cards$index.front : (_cards$index2 = cards[index]) === null || _cards$index2 === void 0 ? void 0 : _cards$index2.back\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary mx-1\",\n        onClick: flipClick,\n        children: \"Flip\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), !flipSide && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: nextClick,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CardList, \"3yfmaHdir5HUE5Bu25hB2fyreGw=\", false, function () {\n  return [useHistory];\n});\n\n_c = CardList;\nexport default CardList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardList\");","map":{"version":3,"names":["React","useState","useHistory","CardList","deck","cardCount","cards","index","setIndex","flipSide","setFlipSide","history","push","id","flipClick","nextClick","restartPrompt","window","confirm","front","back"],"sources":["/Users/willianzdietz/Downloads/finished-project-flashedCards/src/Cards/CardList.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction CardList({deck, cardCount, cards}){\n    const [index, setIndex] = useState(0);\n    const [flipSide, setFlipSide] = useState(true);\n    const history = useHistory();\n\n    if (cardCount < 3) {\n        return (\n            <div>\n                <h4> Not Enough Cards</h4>\n                <p> You need at least 3 cards to study. There are {cardCount} cards in this deck</p>\n                <button \n                    className=\"btn btn-primary\"\n                    onClick={() => history.push(`/decks/${deck.id}/cards/new`)}>\n                    <span className=\"oi oi-plus mr-1\"></span>\n                    Add Cards\n                </button>\n            </div>\n        )\n    }\n\n    //flips the cards between the front and back using a boolean\n    function flipClick() {\n        setFlipSide(!flipSide);\n    }\n\n    //cycles through the deck. once the deck is complete, the user is prompted to either restart or return home \n    function nextClick() {\n        if (index < (cardCount-1)) {\n            setIndex(index + 1);\n            setFlipSide(true);\n        }\n        else {\n            const restartPrompt = window.confirm(\"Restart? Click 'Cancel' to return to the home page.\");\n            //if restart prompt returns true, reset the deck to the initial conditions\n            if (restartPrompt) {\n                setIndex(0);\n                setFlipSide(true);\n            }\n            //if restart prompt is false, go home\n            else history.push(\"/\");\n            \n        }\n    }\n\n    \n    return (\n        <div className=\"card-body border rounded p-2 my-2\">\n            <div className=\"card-title\">\n                <h4>Card {index + 1} of {cardCount}</h4>\n                <p>{flipSide ? cards[index]?.front : cards[index]?.back}</p>\n            </div>\n            <div className=\"buttons\">\n                <button className=\"btn btn-secondary mx-1\" onClick={flipClick}>Flip</button>\n                {!flipSide && (<button className=\"btn btn-primary\" onClick={nextClick}>Next</button>)}\n            </div>\n        </div>\n    )\n\n}\n\nexport default CardList;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;AAEA,SAASC,QAAT,OAA2C;EAAA;;EAAA;;EAAA,IAAzB;IAACC,IAAD;IAAOC,SAAP;IAAkBC;EAAlB,CAAyB;EACvC,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,CAAD,CAAlC;EACA,MAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,IAAD,CAAxC;EACA,MAAMU,OAAO,GAAGT,UAAU,EAA1B;;EAEA,IAAIG,SAAS,GAAG,CAAhB,EAAmB;IACf,oBACI;MAAA,wBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAA,8DAAmDA,SAAnD;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI;QACI,SAAS,EAAC,iBADd;QAEI,OAAO,EAAE,MAAMM,OAAO,CAACC,IAAR,CAAc,UAASR,IAAI,CAACS,EAAG,YAA/B,CAFnB;QAAA,wBAGI;UAAM,SAAS,EAAC;QAAhB;UAAA;UAAA;UAAA;QAAA,QAHJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAHJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAYH,CAlBsC,CAoBvC;;;EACA,SAASC,SAAT,GAAqB;IACjBJ,WAAW,CAAC,CAACD,QAAF,CAAX;EACH,CAvBsC,CAyBvC;;;EACA,SAASM,SAAT,GAAqB;IACjB,IAAIR,KAAK,GAAIF,SAAS,GAAC,CAAvB,EAA2B;MACvBG,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;MACAG,WAAW,CAAC,IAAD,CAAX;IACH,CAHD,MAIK;MACD,MAAMM,aAAa,GAAGC,MAAM,CAACC,OAAP,CAAe,qDAAf,CAAtB,CADC,CAED;;MACA,IAAIF,aAAJ,EAAmB;QACfR,QAAQ,CAAC,CAAD,CAAR;QACAE,WAAW,CAAC,IAAD,CAAX;MACH,CAHD,CAIA;MAJA,KAKKC,OAAO,CAACC,IAAR,CAAa,GAAb;IAER;EACJ;;EAGD,oBACI;IAAK,SAAS,EAAC,mCAAf;IAAA,wBACI;MAAK,SAAS,EAAC,YAAf;MAAA,wBACI;QAAA,oBAAUL,KAAK,GAAG,CAAlB,UAAyBF,SAAzB;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAA,UAAII,QAAQ,mBAAGH,KAAK,CAACC,KAAD,CAAR,iDAAG,aAAcY,KAAjB,oBAAyBb,KAAK,CAACC,KAAD,CAA9B,kDAAyB,cAAca;MAAnD;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAKI;MAAK,SAAS,EAAC,SAAf;MAAA,wBACI;QAAQ,SAAS,EAAC,wBAAlB;QAA2C,OAAO,EAAEN,SAApD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,EAEK,CAACL,QAAD,iBAAc;QAAQ,SAAS,EAAC,iBAAlB;QAAoC,OAAO,EAAEM,SAA7C;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFnB;IAAA;MAAA;MAAA;MAAA;IAAA,QALJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAaH;;GA1DQZ,Q;UAGWD,U;;;KAHXC,Q;AA4DT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/willianzdietz/Downloads/finished-project-flashedCards/src/Deck/EditDeck.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory, useParams, Link } from \"react-router-dom\";\nimport { readDeck } from \"../utils/api\";\nimport { updateDeck } from \"../utils/api/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditDeck() {\n  _s();\n\n  const history = useHistory();\n  const [deck, setDeck] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const {\n    deckId\n  } = useParams(); //handles the updating of the \"name\" and \"description\" values that will be put into the new deck\n\n  const handleNameChange = event => setName(event.target.value);\n\n  const handleDescriptionChange = event => setDescription(event.target.value); //loads the appropriate deck\n\n\n  useEffect(() => {\n    const deckAbort = new AbortController();\n\n    async function loadDeck() {\n      try {\n        const response = await readDeck(deckId, deckAbort.signal);\n        setDeck(response);\n        setName(response.name);\n        setDescription(response.description);\n      } catch (error) {\n        console.log(\"error creating deck list\");\n      }\n\n      return () => {\n        deckAbort.abort();\n      };\n    }\n\n    loadDeck();\n  }, [deckId]); //on submit, udpates a new deck in data/db.json, then the site directs to the new decks \"view\" page\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    updateDeck({ ...deck,\n      name: name,\n      description: description\n    }).then(newDeck => history.push(`/decks/${newDeck.id}`)); // console.log(name);\n    // console.log(description);\n  };\n\n  return (\n    /*#__PURE__*/\n    //the create deck form saves the data inputted by the form into data/db.json\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        \"aria-label\": \"breadcrumb\",\n        children: /*#__PURE__*/_jsxDEV(\"ol\", {\n          className: \"breadcrumb\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"breadcrumb-item\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              children: \"Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"breadcrumb-item active\",\n            \"aria-current\": \"page\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/decks/${deck.id}`,\n              children: deck.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"breadcrumb-item active\",\n            \"aria-current\": \"page\",\n            children: \"Edit Deck\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Edit: \", deck.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"name\",\n            required: true,\n            onChange: handleNameChange,\n            value: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"description\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"form-control\",\n            id: \"description\",\n            rows: \"3\",\n            required: true,\n            onChange: handleDescriptionChange,\n            value: description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary mx-1\",\n          onClick: () => history.push(`/decks/${deck.id}`),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary mx-1\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(EditDeck, \"2GgbsVrkDI72MMmj+UMv/XSRpe0=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = EditDeck;\nexport default EditDeck;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditDeck\");","map":{"version":3,"names":["React","useState","useEffect","useHistory","useParams","Link","readDeck","updateDeck","EditDeck","history","deck","setDeck","name","setName","description","setDescription","deckId","handleNameChange","event","target","value","handleDescriptionChange","deckAbort","AbortController","loadDeck","response","signal","error","console","log","abort","handleSubmit","preventDefault","then","newDeck","push","id"],"sources":["/Users/willianzdietz/Downloads/finished-project-flashedCards/src/Deck/EditDeck.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useHistory, useParams, Link } from \"react-router-dom\";\nimport { readDeck } from \"../utils/api\";\nimport { updateDeck } from \"../utils/api/index\";\n\nfunction EditDeck() {\n  const history = useHistory();\n  const [deck, setDeck] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const { deckId } = useParams();\n  //handles the updating of the \"name\" and \"description\" values that will be put into the new deck\n  const handleNameChange = (event) => setName(event.target.value);\n  const handleDescriptionChange = (event) => setDescription(event.target.value);\n\n  //loads the appropriate deck\n  useEffect(() => {\n    const deckAbort = new AbortController();\n    async function loadDeck() {\n      try {\n        const response = await readDeck(deckId, deckAbort.signal);\n        setDeck(response);\n        setName(response.name);\n        setDescription(response.description);\n      } catch (error) {\n        console.log(\"error creating deck list\");\n      }\n      return () => {\n        deckAbort.abort();\n      };\n    }\n\n    loadDeck();\n  }, [deckId]);\n\n  //on submit, udpates a new deck in data/db.json, then the site directs to the new decks \"view\" page\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    updateDeck({\n      ...deck,\n      name: name,\n      description: description,\n    }).then((newDeck) => history.push(`/decks/${newDeck.id}`));\n    // console.log(name);\n    // console.log(description);\n  };\n  return (\n    //the create deck form saves the data inputted by the form into data/db.json\n    <div>\n      <nav aria-label=\"breadcrumb\">\n        <ol className=\"breadcrumb\">\n          <li className=\"breadcrumb-item\">\n            <Link to=\"/\">\n              Home\n            </Link>\n          </li>\n          <li className=\"breadcrumb-item active\" aria-current=\"page\">\n            <Link to={`/decks/${deck.id}`}>{deck.name}</Link>\n          </li>\n          <li className=\"breadcrumb-item active\" aria-current=\"page\">\n            Edit Deck\n          </li>\n        </ol>\n      </nav>\n      <h3>Edit: {deck.name}</h3>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"name\">Name</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"name\"\n            required\n            onChange={handleNameChange}\n            value={name}\n          />\n        </div>\n        <br />\n        <div>\n          <label htmlFor=\"description\">Description</label>\n          <textarea\n            className=\"form-control\"\n            id=\"description\"\n            rows=\"3\"\n            required\n            onChange={handleDescriptionChange}\n            value={description}\n          ></textarea>\n        </div>\n        <br />\n        <button\n          className=\"btn btn-secondary mx-1\"\n          onClick={() => history.push(`/decks/${deck.id}`)}\n        >\n          Cancel\n        </button>\n        <button type=\"submit\" className=\"btn btn-primary mx-1\">\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default EditDeck;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}